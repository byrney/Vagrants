# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    #
    # Box
    #
    config.vm.box = "ARTACK/debian-jessie"
    config.vm.box_url = 'https://atlas.hashicorp.com/ARTACK/boxes/debian-jessie'
    config.vm.box_check_update = false

    #
    # Provider
    #
    config.vm.provider "virtualbox" do |vb|
       vb.gui = true
       vb.memory = 2048
       vb.name = Dir.pwd.split('/').last
       vb.linked_clone = true
    end

    #
    # Networking
    #
    config.vm.hostname = Dir.pwd.split('/').last
    config.ssh.forward_x11 = true
    config.ssh.insert_key = false
    config.vm.network "forwarded_port", guest: 9292, host: 9292, host_ip: "127.0.0.1", id: 'fhweb'

    #
    # Provision
    #
    config.vm.provision "fix-no-tty", type: "shell" do |s|
        s.privileged = false
        s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
    end

    config.vm.provision "chef_apply" do |chef|
        chef.recipe = <<-END
            package ['curl', 'git', 'ruby-build', 'nodejs', 'npm', 'bundler', 'mongodb']

            execute 'gpg' do
                command 'gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3'
                creates "/home/vagrant/.gnupg"
                user 'vagrant'
                cwd '/home/vagrant'
                environment({'HOME' => '/home/vagrant', 'USER' => 'vagrant'})
            end

            execute 'rvm-setup' do
                command '\\curl -sSL https://get.rvm.io | bash'
                creates "/home/vagrant/.rvm"
                user 'vagrant'
                cwd '/home/vagrant'
                environment({'HOME' => '/home/vagrant', 'USER' => 'vagrant'})
            end

            link '/usr/bin/node' do
                to '/usr/bin/nodejs'
            end

            execute 'phantom-setup' do
                command 'npm install -g phantomjs'
                creates '/usr/local/bin/phantomjs'
            end

            script 'rvm-215' do
                interpreter 'bash'
                code '. .rvm/scripts/rvm && rvm install 2.1.5'
                user 'vagrant'
                cwd '/home/vagrant'
                environment({'HOME' => '/home/vagrant', 'USER' => 'vagrant'})
            end

        END
    end

    #config.vm.provision(:shell, path: '../provision/mono.sh')
    #config.vm.provision("powa", type: :shell, path: '../provision/powa.sh')

    config.vm.provision("autoremove", type: :shell, inline: 'apt-get -y autoremove')



end
